name: Tests
on:
  pull_request:

env:
  INDY_VERSION: 1.16.0

jobs:
  info:
    name: Gather image info
    runs-on: ubuntu-latest
    outputs:
      repo-owner: ${{ steps.repo-owner.outputs.owner-lc }}
      indy-version: ${{ steps.indy-version.outputs.indy-version }}
    steps:
      - name: lowercase repo owner name
        id: repo-owner
        run: |
          echo "::set-output name=owner-lc::${GITHUB_REPOSITORY_OWNER,,}"

      - name: indy version
        id: indy-version
        run: |
          echo "::set-output name=indy-version::${{env.INDY_VERSION}}"

  base-image:
    name: Publish base image
    needs: info
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-base
          key: ${{ runner.os }}-buildx-base-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-base-

      - name: Build needed
        id: build-needed
        uses: actions/cache@v3
        with:
          path: ~/.image
          key: ${{ matrix.python-version }}-${{ env.INDY_VERSION }}-${{ hashFiles('.github/workflows/tests.yml', 'requirements*.txt', 'docker/Dockerfile.indy-base', 'docker/Dockerfile.test-indy') }}

      - name: Set up Docker Buildx
        if: steps.build-needed.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v1

      - name: Log in to the GitHub Container Registry
        if: steps.build-needed.outputs.cache-hit != 'true'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Base Image Metadata
        if: steps.build-needed.outputs.cache-hit != 'true'
        id: base-meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ needs.info.outputs.repo-owner }}/indy-python
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=py${{ matrix.python-version }}-${{ env.INDY_VERSION }}

      - name: Build and Push Base Image to ghcr.io
        if: steps.build-needed.outputs.cache-hit != 'true'
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          file: docker/Dockerfile.indy-base
          tags: ${{ steps.base-meta.outputs.tags }}
          labels: ${{ steps.base-meta.outputs.labels }}
          build-args: |
            python_version=${{ matrix.python-version }}
            indy_version=${{ needs.info.outputs.indy_version }}
            indy_sdk_url=https://codeload.github.com/hyperledger/indy-sdk/tar.gz/refs/tags/v${{ env.INDY_VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache-base
          cache-to: type=local,dest=/tmp/.buildx-cache-base-new,mode=max

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache-base
          mv /tmp/.buildx-cache-base-new /tmp/.buildx-cache-base


  test-image:
    name: Publish test image
    needs: ["info", "base-image"]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-test
          key: ${{ runner.os }}-buildx-test-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-test-

      - name: Build needed
        id: build-needed
        uses: actions/cache@v3
        with:
          path: ~/.image
          key: ${{ matrix.python-version }}-${{ env.INDY_VERSION }}-${{ hashFiles('.github/workflows/tests.yml', 'requirements*.txt', 'docker/Dockerfile.indy-base', 'docker/Dockerfile.test-indy') }}

      - name: Set up Docker Buildx
        if: steps.build-needed.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v1

      - name: Log in to the GitHub Container Registry
        if: steps.build-needed.outputs.cache-hit != 'true'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Test Image Metadata
        if: steps.build-needed.outputs.cache-hit != 'true'
        id: test-meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ needs.info.outputs.repo-owner }}/acapy-test
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=py${{ matrix.python-version }}-${{ env.INDY_VERSION }}

      - name: Build and Push Test Image to ghcr.io
        if: steps.build-needed.outputs.cache-hit != 'true'
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          file: docker/Dockerfile.test-indy
          tags: ${{ steps.test-meta.outputs.tags }}
          labels: ${{ steps.test-meta.outputs.labels }}
          build-args: |
            python_version=${{ matrix.python-version }}
            indy_version=${{ env.INDY_VERSION }}
            org=${{ needs.info.outputs.repo-owner }}
          cache-from: type=local,src=/tmp/.buildx-cache-test
          cache-to: type=local,dest=/tmp/.buildx-cache-test-new,mode=max

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache-test
          mv /tmp/.buildx-cache-test-new /tmp/.buildx-cache-test

  tests:
    name: Tests
    needs:
      - info
      - base-image
      - test-image
    runs-on: ubuntu-latest
    container: ghcr.io/${{ needs.info.outputs.repo-owner }}/acapy-test:py${{ matrix.python-version }}-${{ needs.info.outputs.indy-version }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Run pytest
        run: |
          pytest
